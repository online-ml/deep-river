name: unit-tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ['3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest, windows-latest]
        river: ['0.21.1', '0.22.0']

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python }}
        run: uv python install ${{ matrix.python }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python }}-${{ matrix.river }}-${{ hashFiles('**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python }}-${{ matrix.river }}-
            uv-${{ runner.os }}-${{ matrix.python }}-
            uv-${{ runner.os }}-

      - name: Install dependencies with river ${{ matrix.river }}
        run: |
          uv add river==${{ matrix.river }}
          uv sync --all-extras

      - name: Download datasets
        run: uv run python -c "from river import datasets; datasets.CreditCard().download(); datasets.Elec2().download(); datasets.Keystroke().download()"

      - name: Run tests
        run: |
          export PYTHONPATH=$PWD
          uv run pytest -v --cov=deep_river -m "not datasets"

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4
